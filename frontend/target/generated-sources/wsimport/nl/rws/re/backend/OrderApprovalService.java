
package nl.rws.re.backend;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b14002
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "OrderApprovalService", targetNamespace = "http://com.test/orderApproval", wsdlLocation = "file:/D:/workspace_nb_rijkwaterstaat/re-parent/frontend/src/main/resources/wsdl/backend.wsdl")
public class OrderApprovalService
    extends Service
{

    private final static URL ORDERAPPROVALSERVICE_WSDL_LOCATION;
    private final static WebServiceException ORDERAPPROVALSERVICE_EXCEPTION;
    private final static QName ORDERAPPROVALSERVICE_QNAME = new QName("http://com.test/orderApproval", "OrderApprovalService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/D:/workspace_nb_rijkwaterstaat/re-parent/frontend/src/main/resources/wsdl/backend.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        ORDERAPPROVALSERVICE_WSDL_LOCATION = url;
        ORDERAPPROVALSERVICE_EXCEPTION = e;
    }

    public OrderApprovalService() {
        super(__getWsdlLocation(), ORDERAPPROVALSERVICE_QNAME);
    }

    public OrderApprovalService(WebServiceFeature... features) {
        super(__getWsdlLocation(), ORDERAPPROVALSERVICE_QNAME, features);
    }

    public OrderApprovalService(URL wsdlLocation) {
        super(wsdlLocation, ORDERAPPROVALSERVICE_QNAME);
    }

    public OrderApprovalService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ORDERAPPROVALSERVICE_QNAME, features);
    }

    public OrderApprovalService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public OrderApprovalService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns OrderApprovalServicePortType
     */
    @WebEndpoint(name = "OrderApprovalServiceHttpSoap11Endpoint")
    public OrderApprovalServicePortType getOrderApprovalServiceHttpSoap11Endpoint() {
        return super.getPort(new QName("http://com.test/orderApproval", "OrderApprovalServiceHttpSoap11Endpoint"), OrderApprovalServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns OrderApprovalServicePortType
     */
    @WebEndpoint(name = "OrderApprovalServiceHttpSoap11Endpoint")
    public OrderApprovalServicePortType getOrderApprovalServiceHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://com.test/orderApproval", "OrderApprovalServiceHttpSoap11Endpoint"), OrderApprovalServicePortType.class, features);
    }

    /**
     * 
     * @return
     *     returns OrderApprovalServicePortType
     */
    @WebEndpoint(name = "OrderApprovalServiceHttpsSoap11Endpoint")
    public OrderApprovalServicePortType getOrderApprovalServiceHttpsSoap11Endpoint() {
        return super.getPort(new QName("http://com.test/orderApproval", "OrderApprovalServiceHttpsSoap11Endpoint"), OrderApprovalServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns OrderApprovalServicePortType
     */
    @WebEndpoint(name = "OrderApprovalServiceHttpsSoap11Endpoint")
    public OrderApprovalServicePortType getOrderApprovalServiceHttpsSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://com.test/orderApproval", "OrderApprovalServiceHttpsSoap11Endpoint"), OrderApprovalServicePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (ORDERAPPROVALSERVICE_EXCEPTION!= null) {
            throw ORDERAPPROVALSERVICE_EXCEPTION;
        }
        return ORDERAPPROVALSERVICE_WSDL_LOCATION;
    }

}

package nl.rws.re.rules.orderapproval;
 
import nl.rws.re.facts.order.OrderAccept;
import nl.rws.re.facts.order.OrderReject;
import nl.rws.re.facts.order.PlaceOrder;

 /**
  * @author Mainul
  *
  */

rule "Order Approval Rule" dialect "mvel" no-loop true salience 4
when
    $placeOrder : PlaceOrder( ( symbol == "Company A" && quantity > 10 )
    || ( symbol == "Company B" && price > 100 )
    || ( symbol == "Company C" && quantity < 200 && price > 50 ) )
then
    OrderAccept orderAccept = new OrderAccept("Accepted order for: "+ $placeOrder.quantity + " stocks of "+$placeOrder.symbol +" at $" + $placeOrder.price);
    insert(orderAccept);
    retract($placeOrder);
end

rule "Company A Order Deny Rule" dialect "mvel" no-loop true salience 3
when
    not ( OrderAccept())
    $placeOrder : PlaceOrder( symbol == "Company A" )
then
    retract($placeOrder);
    OrderReject orderReject = new OrderReject("An Order for stocks of Company A is accepted only if the number of stocks is higher than 10.");
    insert(orderReject);
end

rule "Company B Order Deny Rule" dialect "mvel" no-loop true salience 2
when
    not ( OrderAccept())
    $placeOrder : PlaceOrder( symbol == "Company B" )
then
    retract($placeOrder);
    OrderReject orderReject = new OrderReject("An Order for stocks of Company B is accepted only if the stock price is higher than 100 $.");
    insert(orderReject);
end

rule "Company C Order Deny Rule" dialect "mvel" no-loop true salience 1
when
    not ( OrderAccept())
    $placeOrder : PlaceOrder( symbol == "Company C" )
then
    retract($placeOrder);
    OrderReject orderReject = new OrderReject("An Order for stocks of Company C is accepted only if the stock price is higher than 50 $ and the number of stocks is lower than 200.");
    insert(orderReject);
end



